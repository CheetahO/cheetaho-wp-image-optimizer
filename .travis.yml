sudo: false
dist: trusty

language: php

notifications:
  slack:
    secure: JwqSRPsrDz6NpARk2Dv58MSvbPO/MEfIW2onXe5GDTHwGCTm67cmfCjJrrE2zQLt4UXbF0t/SE/zp9GZ6NAm8wQNauiXAdWxEnAgz/JjI+ubHhZptDmAG1+aALBQr6tV5EiJ9R6MqEbLekCvCB2pn0xNZZCOQTmY9F8xwkaJPgX+ubwwonoKJQ7txd8uKyfCn1b003f218n1RGagP6iUSk1PcodO7lA9WZwy1MJIp9W7/EsN6Z+xANyqkytnGrxXA/zqgf82cVBx55VdUDdKL/SSIgmovM2WptjsyMMDGqnMeGbnoskl1DmPvbqV9RXjU3qXlNZ1NT52iBZxLvVqRpAlwZrxQQer/f2/WGGo7nwV62zgDgWb0dYsGN6d7k1Ry0Pn3NZ9bnaY1b87gF3eSwWuj5VM7asm2weK5WUYYJTDCwLsWJ6yRvkaR7x1NQvWQmARmj0JpvyUk+pVUBtUImTvI1megn+67UlCtDbegRufa/2kK9VOmnRuYa3qJ6bManXe0mFQhOpxvGnkjVi8V+dSsNm1X6qa2ulczJxrU3IiCNfpokpJIaLhM4TokAnNF14AbEUimqlVXfFQJyRkaIrc9IL39K4Ft6OhbotKSYXSiK5YjPYFlSL1tij4oa4nPv5Q3+Mqn6+ChJQpCheZJFE1AkxTHmE1OUrBmlVc0Ok=
  email:
    on_success: always
    on_failure: always

branches:
  only:
    - master
    - dev

cache:
  directories:
    - $HOME/.composer/cache

stages:
  - name: test
  - name: ðŸš€ deployment
    if: branch = "master"

jobs:
  fast_finish: true
  include:
    - php: 7.4
      env: WP_VERSION=latest WP_MULTISITE=1
    - php: 7.3
      #env: WP_VERSION=latest WP_MULTISITE=1 WPSNIFF=1
      env: WP_VERSION=latest WP_MULTISITE=1
    - php: 7.0
      env: WP_VERSION=5.0
    - php: 5.6
      env: WP_VERSION=4.4
    - stage: ðŸš€ deployment
      name: "Deploy to WordPress"
      php: 7.3
      env: WP_VERSION=latest
      deploy:
        provider: script
        skip_cleanup: true
        script: bash ./bin/deploy.sh
        on:
          php: 7.3
          branch: master

before_script:
  - export PATH="$HOME/.composer/vendor/bin:$PATH"
  - |
    if [ -f ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then
      phpenv config-rm xdebug.ini
    else
      echo "xdebug.ini does not exist"
    fi
  - |
    if [[ ! -z "$WP_VERSION" ]] ; then
      bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION false $CHEETAHO_API_KEY
      composer global require "phpunit/phpunit=4.8.*|5.7.*"
    fi
  - |
    if [[ "$WPSNIFF" == "1" ]] ; then
      composer global require wp-coding-standards/wpcs dealerdirect/phpcodesniffer-composer-installer
      phpcs --config-set installed_paths $HOME/.composer/vendor/wp-coding-standards/wpcs
    fi

script:
  - if [[ "$WPSNIFF" == "1" ]]; then phpcs --standard=phpcs.ruleset.xml --extensions=php .; fi
  - phpunit